@using MVC_projekt.Models
@using MVC_projekt.Models.View
@model MVC_projekt.Models.IndexViewModel
@{
    ViewBag.Title = "Konto";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/tabs.css" rel="stylesheet" />

<h2>@ViewBag.Title.</h2>
<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Ustawienia konta</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Hasło:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Zmień hasło", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Ustaw hasło", "SetPassword")
            }
            ]
        </dd>
        @*
                    <dt>External Logins:</dt>
                    <dd>
                        @Model.Logins.Count [
                        @Html.ActionLink("Manage", "ManageLogins") ]
                    </dd>

                        Phone Numbers can used as a second factor of verification in a two-factor authentication system.

                         See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                            for details on setting up this ASP.NET application to support two-factor authentication using SMS.

                         Uncomment the following block after you have set up two-factor authentication@

                            <dt>Phone Number:</dt>
                            <dd>
                                @(Model.PhoneNumber ?? "None")
                                @if (Model.PhoneNumber != null)
                                {
                                    <br />
                                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                                    }
                                }
                                else
                                {
                                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                                }
                            </dd>

                <dt>Two-Factor Authentication:</dt>
                <dd>
                    <p>
                        There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                        for details on setting up this ASP.NET application to support two-factor authentication.
                    </p>
                    @if (Model.TwoFactor)
                        {
                            using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <text>Enabled
                                <input type="submit" value="Disable" class="btn btn-link" />
                                </text>
                            }
                        }
                        else
                        {
                            using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <text>Disabled
                                <input type="submit" value="Enable" class="btn btn-link" />
                                </text>
                            }
                        }
            </dd>*@
        <dd></dd>
    </dl>
    <div class="container" style="margin-top: 20px">
        <div class="row">
            <div style="padding-left: 5%; padding-right: 5%">
                <div class="card">
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#tabs-1" role="tab" data-toggle="tab">@Resources.Global.BookOrderd</a></li>
                        @*<li role="presentation"><a href="#tabs-2" role="tab" data-toggle="tab">@Resources.Global.BookBooked</a></li>*@
                        <li role="presentation"><a href="#tabs-3" role="tab" data-toggle="tab">@Resources.Global.BookHistory</a></li>
                    </ul>

                    <div class="tab-content">

                        <div role="tabpanel" class="tab-pane active" id="tabs-1">
                            <table class="table">
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(book => book.BookOrdered[0].Authors[0].FullName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(book => book.BookOrdered[0].Title)
                                    </th>
                                    <th>
                                        @Html.DisplayName(Resources.Global.OrderDate)
                                    </th>
                                    <th>
                                        @Html.DisplayName(Resources.Global.Expire)
                                    </th>
                                </tr>
                                @foreach (var book in Model.BookOrdered)
                                {
                                    <tr>
                                        <td>
                                            @foreach (var author in book.Authors)
                                            { 
                                                @Html.DisplayFor(model => author.FullName)
                                                <br />
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => book.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => book.OrderDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => book.AvailableOn)
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>

                        <div role="tabpanel" class="tab-pane" id="tabs-3">
                            <table class="table">
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(book => book.BookOrdered[0].Authors[0].FullName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(book => book.BookOrdered[0].Title)
                                    </th>
                                    <th>
                                        @Html.DisplayName(Resources.Global.OrderDate)
                                    </th>
                                    <th>
                                        @Html.DisplayName(Resources.Global.Expire)
                                    </th>
                                </tr>
                                @foreach (var book in Model.BookHistory)
                                {
                                    <tr>
                                        <td>
                                            @foreach (var author in book.Authors)
                                            {
                                                @Html.DisplayFor(model => author.FullName)
                                                <br />
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => book.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => book.OrderDate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => book.AvailableOn)
                                        </td>
                                    </tr>
                                }
                            </table>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
